name: On Deploy
run-name: "[On Deploy] ${{ inputs.tag }}"

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: Tag to deploy
        type: string
      skip_dev:
        required: true
        description: Skip deploy to dev environment

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Build
        run: npm ci && npm run build
      - name: Save Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-result
          path: out/

  review-dev:
    runs-on: ubuntu-latest
    environment: review-dev
    concurrency:
      group: review-dev
      cancel-in-progress: true
    needs: build
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Logging Approval
        shell: bash
        run: |
          echo "Approved!"

  review-staging:
    runs-on: ubuntu-latest
    environment: review-staging
    concurrency:
      group: review-staging
      cancel-in-progress: true
    needs: build
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Logging Approval
        shell: bash
        run: |
          echo "Approved!"

  review-live:
    runs-on: ubuntu-latest
    environment: review-live
    concurrency:
      group: review-live
      cancel-in-progress: true
    needs: build
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Logging Approval
        shell: bash
        run: |
          echo "Approved!"

  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    concurrency:
      group: deploy-dev
      cancel-in-progress: true
    needs: review-dev
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: dev
          projectId: "${{vars.FIREBASE_PROJECT_ID}}"

  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    concurrency:
      group: deploy-staging
      cancel-in-progress: true
    needs: review-staging
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: staging
          projectId: "${{vars.FIREBASE_PROJECT_ID}}"

  deploy-live:
    runs-on: ubuntu-latest
    environment: live
    concurrency:
      group: deploy-live
      cancel-in-progress: true
    needs: review-live
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-result
          path: out
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: live
          projectId: "${{vars.FIREBASE_PROJECT_ID}}"
